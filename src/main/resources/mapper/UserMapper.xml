<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dnu.team.advertise.pro.dao.mapper.UserMapper" >

    <resultMap id="getUserResultMap" type="com.dnu.team.advertise.pro.model.User">

        <id property="id" column="ID"/>
        <result property="firstName" column="FIRST_NAME"/>
        <result property="lastName" column="LAST_NAME"/>
        <result property="middleName" column="MIDDLE_NAME"/>
        <result property="role" column="ROLE" javaType="com.dnu.team.advertise.pro.model.Role" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>

        <association property="contacts" javaType="com.dnu.team.advertise.pro.model.Contacts">
            <id property="id" column="CONTACT_ID"/>
            <result property="userId" column="ID"/>
            <result property="city" column="CITY"/>
            <result property="postCode" column="POST_CODE"/>
            <result property="street" column="STREET"/>
            <result property="house" column="HOUSE"/>
            <result property="flat" column="FLAT"/>
            <result property="phone" column="PHONE"/>
            <result property="email" column="EMAIL"/>
        </association>

        <association property="credentials" javaType="com.dnu.team.advertise.pro.model.Credentials">
            <id property="login" column="LOGIN"/>
            <result property="password" column="PASSWORD"/>
            <result property="userId" column="ID"/>
        </association>

    </resultMap>


    <select id="get" resultMap="getUserResultMap">
        SELECT
          users.ID as ID,
          users.FIRST_NAME as FIRST_NAME,
          users.LAST_NAME as LAST_NAME,
          users.MIDDLE_NAME as MIDDLE_NAME,
          users.ROLE as ROLE,
          contacts.ID as CONTACT_ID,
          contacts.CITY as CITY,
          contacts.POST_CODE as POST_CODE,
          contacts.STREET as STREET,
          contacts.HOUSE as HOUSE,
          contacts.FLAT as FLAT,
          contacts.PHONE as PHONE,
          contacts.EMAIL as EMAIL,
          credentials.LOGIN as LOGIN,
          credentials.PASS as PASSWORD
        FROM USERS users
          INNER JOIN CONTACTS contacts ON users.ID = contacts.USER_ID
          INNER JOIN CREDENTIALS credentials ON users.ID = credentials.USER_ID
        WHERE users.id = #{id}
    </select>

    <select id="getAllUsers" resultMap="getUserResultMap">
        SELECT
          users.ID as ID,
          users.FIRST_NAME as FIRST_NAME,
          users.LAST_NAME as LAST_NAME,
          users.MIDDLE_NAME as MIDDLE_NAME,
          users.ROLE as ROLE,
          contacts.ID as CONTACT_ID,
          contacts.CITY as CITY,
          contacts.POST_CODE as POST_CODE,
          contacts.STREET as STREET,
          contacts.HOUSE as HOUSE,
          contacts.FLAT as FLAT,
          contacts.PHONE as PHONE,
          contacts.EMAIL as EMAIL,
          credentials.LOGIN as LOGIN,
          credentials.PASS as PASSWORD
        FROM
          USERS users
          INNER JOIN CONTACTS contacts ON users.ID = contacts.USER_ID
          INNER JOIN CREDENTIALS credentials ON users.ID = credentials.USER_ID;
    </select>

    <select id="search" resultMap="getUserResultMap" parameterType="com.dnu.team.advertise.pro.model.filter.UserSearchFilter">
        SELECT
          users.ID as ID,
          users.FIRST_NAME as FIRST_NAME,
          users.LAST_NAME as LAST_NAME,
          users.MIDDLE_NAME as MIDDLE_NAME,
          users.ROLE as ROLE,
          contacts.ID as CONTACT_ID,
          contacts.CITY as CITY,
          contacts.POST_CODE as POST_CODE,
          contacts.STREET as STREET,
          contacts.HOUSE as HOUSE,
          contacts.FLAT as FLAT,
          contacts.PHONE as PHONE,
          contacts.EMAIL as EMAIL,
          credentials.LOGIN as LOGIN,
          credentials.PASS as PASSWORD
        FROM
          USERS users
          INNER JOIN CONTACTS contacts ON users.ID = contacts.USER_ID
          INNER JOIN CREDENTIALS credentials ON users.ID = credentials.USER_ID
          <where>
            <if test="login != null and login != ''">credentials.LOGIN = #{login}</if>
            <if test="email != null and email != ''">AND contacts.email = #{email}</if>
            <if test="lastName != null and lastName != ''">AND users.last_name = #{lastName}</if>
            <if test="firstName != null and firstName != ''">AND users.first_name = #{firstName}</if>
            <if test="middleName != null and middleName != ''">AND users.middle_name = #{middleName}</if>
            <if test="city != null and city != ''">AND contacts.city = #{city}</if>
            <if test="street != null and street != ''">AND contacts.street = #{street}</if>
            <if test="house != null and house != ''">AND contacts.house = #{house}</if>
            <if test="flat != null and flat != ''">AND contacts.flat = #{flat}</if>
            <if test="postCode != null">AND contacts.post_code = #{postCode}</if>
            <if test="phone != null and phone != ''">AND contacts.phone = #{phone}</if>
            <if test="role != null and role != ''">AND users.role = #{role}</if>
          </where>
    </select>

    <select id="findByLogin" resultMap="getUserResultMap">
        SELECT
          users.ID as ID,
          users.FIRST_NAME as FIRST_NAME,
          users.LAST_NAME as LAST_NAME,
          users.MIDDLE_NAME as MIDDLE_NAME,
          users.ROLE as ROLE,
          contacts.ID as CONTACT_ID,
          contacts.CITY as CITY,
          contacts.POST_CODE as POST_CODE,
          contacts.STREET as STREET,
          contacts.HOUSE as HOUSE,
          contacts.FLAT as FLAT,
          contacts.PHONE as PHONE,
          contacts.EMAIL as EMAIL,
          credentials.LOGIN as LOGIN,
          credentials.PASS as PASSWORD
        FROM USERS users
          INNER JOIN CONTACTS contacts ON users.ID = contacts.USER_ID
          INNER JOIN CREDENTIALS credentials ON users.ID = credentials.USER_ID
        WHERE credentials.LOGIN = #{login}
    </select>

    <insert id="create" parameterType="com.dnu.team.advertise.pro.model.User" statementType="CALLABLE">
        {call CREATE_USER(#{id}, #{firstName}, #{lastName}, #{middleName}, #{role}, #{contacts.id}, #{contacts.city}, #{contacts.postCode},
        #{contacts.street}, #{contacts.house}, #{contacts.flat}, #{contacts.phone}, #{contacts.email}, #{credentials.login}, #{credentials.password})}
    </insert>

    <update id="update" parameterType="User">
         update USERS set FIRST_NAME=#{firstName}, LAST_NAME=#{lastName}, MIDDLE_NAME=#{middleName}, ROLE=#{role},  where ID = #{id};
         update CONTACTS set USER_ID=#{id}, CITY=#{contacts.city}, POST_CODE=#{contacts.postCode},
           STREET=#{contacts.street}, HOUSE=#{contacts.house}, FLAT=#{contacts.flat}, PHONE=#{contacts.phone}, EMAIL=#{contacts.email},where USER_ID = #{id};
         update CREDENTIALS set LOGIN=#{credentials.login}, PASSWORD=#{credentials.password}, USER_ID=#{id}  where USER_ID = #{id};
    </update>

    <delete id="delete" parameterType="User">
        delete from USERS where ID=#{id};
        delete from CONTACTS where USER_ID=#{id};
        delete from CREDENTIALS where USER_ID=#{id};
    </delete>

</mapper>