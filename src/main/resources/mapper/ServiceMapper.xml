<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dnu.team.advertise.pro.dao.mapper.ServiceMapper" >

    <resultMap id="getServiceResultMap" type="com.dnu.team.advertise.pro.model.Service">
        <id property="id" column="ID"/>
        <result property="type" column="aTYPE"/>
        <result property="price" column="PRICE"/>
        <result property="period" column="PERIOD"/>
    </resultMap>

    <select id="getAll" resultMap="getServiceResultMap">
        SELECT * FROM services;
    </select>

    <select id="getById" resultMap="getServiceResultMap">
        SELECT * FROM services AS s WHERE s.ID = #{id};
    </select>

    <insert id="insert" parameterType="com.dnu.team.advertise.pro.model.Service" statementType="CALLABLE">
        insert into services VALUES (#{id}, #{type}, #{price}, #{period});
    </insert>

    <select id="getByTypeAndPeriod" resultMap="getServiceResultMap">
        SELECT * FROM services WHERE services.aTYPE = #{type} AND services.PERIOD = #{period};
    </select>

    <select id="search" resultMap="getServiceResultMap" parameterType="com.dnu.team.advertise.pro.model.filter.ServiceSearchFilter">
        SELECT * FROM services
        <where>
            <if test="price != null">ROUND(services.PRICE, 0) = #{price}</if>
            <if test="type != null and type != ''">AND services.aTYPE = #{type}</if>
            <if test="period != null and period != ''">AND services.PERIOD = #{period}
            </if>
        </where>
    </select>

    <update id="update" parameterType="com.dnu.team.advertise.pro.model.Service" statementType="CALLABLE">
        update services AS s set s.price = #{price} where s.ID = #{id} ;
    </update>

    <delete id="delete" parameterType="com.dnu.team.advertise.pro.model.Service" statementType="CALLABLE">
        delete from services where services.ID = #{id};
    </delete>

    <select id="getTypesAndPeriods" resultMap="getServiceResultMap">
        SELECT services.aTYPE, services.PERIOD FROM services;
    </select>

</mapper>